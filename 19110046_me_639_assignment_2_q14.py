# -*- coding: utf-8 -*-
"""19110046_ME 639 Assignment 2 Q14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d1JmZJZSLQ68N33_0cTqTyN5paTw4SOk
"""

#RRR Planar Manipulator

import numpy as np
import math

#Variables Initialisation
l1 = float(input("Length 1 = "))
l2 = float(input("Length 2 = "))
l3 = float(input("Length 3 = "))
q1 = float(input("Angle of first revolute joint = "))
q2 = float(input("Angle of second revolute joint = "))
q3 = float(input("Angle of third revolute joint = "))

#Since all revolutions are about Z axis in planar form
#Lower half of Jacobian
Jw = np.array([[0, 0, 0], [0, 0, 0], [1, 1, 1]])
Jv = np.array([[-(l1*math.sin(q1) + l2*math.sin(q1+q2) + l3*math.sin(q1+q2+q3)), -(l2*math.sin(q1+q2)+l3*math.sin(q1+q2+q3)), -l3*math.sin(q1+q2+q3)], [l1*math.cos(q1) + l2*math.cos(q1+q2)  +l3*math.cos(q1+q2+q3), l2*math.cos(q1+q2)+l3*math.cos(q1+q2+q3), l3*math.cos(q1+q2+q3)], [0, 0, 0]])
J = np.vstack([Jv, Jw])
print(J)

