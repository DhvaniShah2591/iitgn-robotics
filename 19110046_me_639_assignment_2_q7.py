# -*- coding: utf-8 -*-
"""19110046_ME 639 Assignment 2 Q7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gwGQNx2HX2MExNOAZUNSueMSbgxvMOeI
"""

#RRP Scara Robot Manipulator 
#When given joint vector configuration, find position vector of end effector

import numpy as np
import matplotlib.pyplot as plt
import math

#Variables Initialisation
l1 = float(input("Length 1 = "))
l2 = float(input("Length 2 = "))
l3 = float(input("Length 3 = "))
q1 = float(input("Angle of first revolute joint = "))
q2 = float(input("Angle of second revolute joint = "))

d = float(input("Instantaneous length of end effector from prismatic joint = "))

R01 =  np.identity(3)
d01 = np.array([[0], [0], [l1]])
R12 = np.array([[(math.cos(q1)), (-math.sin(q1)), 0], [(math.sin(q1)), (math.cos(q1)), 0], [0, 0, 1]])
d12 = np.zeros((3,1))
R23 = np.array([[math.cos(q2), -math.sin(q2), 0], [math.sin(q2), math.cos(q2), 0], [0, 0, 1]])
d23 = np.array([[l2], [0], [0]])
R34 = np.identity(3)
d34 = np.array([[0], [-l3], [0]])
p4 = np.array([[0], [0], [-d]])

H01 = np.vstack([np.hstack([R01, d01]), [0, 0, 0, 1]])
H12 = np.vstack([np.hstack([R12, d12]), [0, 0, 0, 1]])
H23 = np.vstack([np.hstack([R23, d23]), [0, 0, 0, 1]])
H34 = np.vstack([np.hstack([R34, d34]), [0, 0, 0, 1]])

vec_p4 = np.vstack([p4, 1])
vec_mat = np.matmul(np.matmul(np.matmul(H01, H12), np.matmul(H23, H34)), vec_p4)
print(vec_mat)

p0 = vec_mat[0:3, 0]
print(p0)

